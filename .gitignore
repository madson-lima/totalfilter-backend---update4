# =====================
# LOGS E RELAT√ìRIOS
# =====================
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*
report.[0-9]*.json

# =====================
# ARQUIVOS DE PROCESSO
# =====================
pids
*.pid
*.seed
*.pid.lock

# =====================
# BUILD / SA√çDAS TEMP
# =====================
lib-cov
coverage
*.lcov
.nyc_output
build/
dist/
.cache
.parcel-cache
.out

# =====================
# DEPEND√äNCIAS
# =====================
node_modules/
jspm_packages/
web_modules/
bower_components/

# =====================
# CACHE DE TOOLS
# =====================
.eslintcache
.stylelintcache
.rpt2_cache/
.rts2_cache_*/
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

# =====================
# TIPAGEM / TYPESCRIPT
# =====================
*.tsbuildinfo

# =====================
# HIST√ìRICO
# =====================
.node_repl_history

# =====================
# ARQUIVOS DOTENV
# =====================
.env
.env.*.local
.env.local

# =====================
# TESTES / TEMPOR√ÅRIOS
# =====================
*.tgz
.vscode-test/
.vscode/

# =====================
# PASTAS DO PROJETO QUE DEVEM SER MANTIDAS
# =====================

# üëá N√ÉO ignore a pasta public/uploads (necess√°ria para servir imagens)
# Portanto, N√ÉO bloqueie a pasta public
# Se quiser garantir que o Git inclua uploads mesmo vazia:
# Use um .gitkeep dentro de public/uploads/

# Se estiver usando Git e a pasta uploads estiver vazia:
# mkdir -p public/uploads && touch public/uploads/.gitkeep

